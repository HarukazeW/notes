#### 概念介绍

可以使函数内变量突破词法作用域，访问其外部的变量。并且通过将函数作为值传递的方式使得外部可以访问该外层函数的词法作用域中的变量。

延长作用域链的即可叫做闭包。闭包其实就是含有上下文的函数，如下文代码中的a 和b 

```js
function f(){
    var x = 1;
    return g(){
        x++;
        return x;
    }
}
var a = f();
var b = f();
a(); // 2
a(); // 3
b(); // 2
b(); // 3
```

作用：

1. 避免引入全局变量污染
2. 该成员隶属于该函数，使函数有记忆



#### c++

1. 在c++中，可以将f作为一个类的方式。但这样虽然大略表现的行为相似，但是并没有能延长作用域链，未抓到闭包的优势所在。

```c++
class F{
    int x;
    F(){x=1;}
    g(){x++; return x;}
}
```

